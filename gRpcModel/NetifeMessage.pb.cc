// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetifeMessage.proto

#include "NetifeMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace NetifeMessage {
PROTOBUF_CONSTEXPR NetifeProbeRequest::NetifeProbeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ip_addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ip_port_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.raw_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ws_is_raw_text_)*/false
  , /*decltype(_impl_.uuid_sub_)*/0} {}
struct NetifeProbeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeProbeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeProbeRequestDefaultTypeInternal() {}
  union {
    NetifeProbeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeProbeRequestDefaultTypeInternal _NetifeProbeRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifeProbeResponse::NetifeProbeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeProbeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeProbeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeProbeResponseDefaultTypeInternal() {}
  union {
    NetifeProbeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeProbeResponseDefaultTypeInternal _NetifeProbeResponse_default_instance_;
PROTOBUF_CONSTEXPR NetifeRegisterRequest::NetifeRegisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpc_host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpc_port_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeRegisterRequestDefaultTypeInternal() {}
  union {
    NetifeRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeRegisterRequestDefaultTypeInternal _NetifeRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifeRegisterResponse::NetifeRegisterResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeRegisterResponseDefaultTypeInternal() {}
  union {
    NetifeRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeRegisterResponseDefaultTypeInternal _NetifeRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR NetifeComposerRequest::NetifeComposerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ip_addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ip_port_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.raw_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ws_is_raw_text_)*/false
  , /*decltype(_impl_.uuid_sub_)*/0} {}
struct NetifeComposerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeComposerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeComposerRequestDefaultTypeInternal() {}
  union {
    NetifeComposerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeComposerRequestDefaultTypeInternal _NetifeComposerRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifeComposerResponse::NetifeComposerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.raw_back_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeComposerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeComposerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeComposerResponseDefaultTypeInternal() {}
  union {
    NetifeComposerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeComposerResponseDefaultTypeInternal _NetifeComposerResponse_default_instance_;
PROTOBUF_CONSTEXPR NetifePluginCommandRequest::NetifePluginCommandRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/{}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_prefix_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uuid_sub_)*/0} {}
struct NetifePluginCommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifePluginCommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifePluginCommandRequestDefaultTypeInternal() {}
  union {
    NetifePluginCommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifePluginCommandRequestDefaultTypeInternal _NetifePluginCommandRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifePluginCommandResponse::NetifePluginCommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifePluginCommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifePluginCommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifePluginCommandResponseDefaultTypeInternal() {}
  union {
    NetifePluginCommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifePluginCommandResponseDefaultTypeInternal _NetifePluginCommandResponse_default_instance_;
PROTOBUF_CONSTEXPR NetifeScriptRegisterRequest::NetifeScriptRegisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.script_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.script_description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_port_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_spread_chain_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_spread_plugin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_spread_chain_before_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_spread_plugin_before_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.script_content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct NetifeScriptRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeScriptRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeScriptRegisterRequestDefaultTypeInternal() {}
  union {
    NetifeScriptRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeScriptRegisterRequestDefaultTypeInternal _NetifeScriptRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifeScriptRegisterResponse::NetifeScriptRegisterResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeScriptRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeScriptRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeScriptRegisterResponseDefaultTypeInternal() {}
  union {
    NetifeScriptRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeScriptRegisterResponseDefaultTypeInternal _NetifeScriptRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR NetifeScriptDebuggerRequest::NetifeScriptDebuggerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.script_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeScriptDebuggerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeScriptDebuggerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeScriptDebuggerRequestDefaultTypeInternal() {}
  union {
    NetifeScriptDebuggerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeScriptDebuggerRequestDefaultTypeInternal _NetifeScriptDebuggerRequest_default_instance_;
PROTOBUF_CONSTEXPR NetifeScriptDebuggerResponse::NetifeScriptDebuggerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ws_addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ws_port_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NetifeScriptDebuggerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetifeScriptDebuggerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetifeScriptDebuggerResponseDefaultTypeInternal() {}
  union {
    NetifeScriptDebuggerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetifeScriptDebuggerResponseDefaultTypeInternal _NetifeScriptDebuggerResponse_default_instance_;
}  // namespace NetifeMessage
static ::_pb::Metadata file_level_metadata_NetifeMessage_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_NetifeMessage_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_NetifeMessage_2eproto = nullptr;

const uint32_t TableStruct_NetifeMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.ip_addr_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.ip_port_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.ws_is_raw_text_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.uuid_sub_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.raw_text_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeRequest, _impl_.pid_),
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeResponse, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeProbeResponse, _impl_.response_text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeRegisterRequest, _impl_.grpc_host_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeRegisterRequest, _impl_.grpc_port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeRegisterResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.ip_addr_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.ip_port_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.ws_is_raw_text_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.uuid_sub_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerRequest, _impl_.raw_text_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerResponse, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeComposerResponse, _impl_.raw_back_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_.namespace__),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_.command_prefix_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_.params_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandRequest, _impl_.uuid_sub_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifePluginCommandResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.script_name_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.script_description_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_addr_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_port_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_spread_chain_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_spread_plugin_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_spread_chain_before_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.trigger_spread_plugin_before_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.script_content_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterRequest, _impl_.version_),
  ~0u,
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptRegisterResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptDebuggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptDebuggerRequest, _impl_.script_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptDebuggerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptDebuggerResponse, _impl_.ws_addr_),
  PROTOBUF_FIELD_OFFSET(::NetifeMessage::NetifeScriptDebuggerResponse, _impl_.ws_port_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::NetifeMessage::NetifeProbeRequest)},
  { 20, -1, -1, sizeof(::NetifeMessage::NetifeProbeResponse)},
  { 28, -1, -1, sizeof(::NetifeMessage::NetifeRegisterRequest)},
  { 36, -1, -1, sizeof(::NetifeMessage::NetifeRegisterResponse)},
  { 43, 55, -1, sizeof(::NetifeMessage::NetifeComposerRequest)},
  { 61, -1, -1, sizeof(::NetifeMessage::NetifeComposerResponse)},
  { 69, 80, -1, sizeof(::NetifeMessage::NetifePluginCommandRequest)},
  { 85, -1, -1, sizeof(::NetifeMessage::NetifePluginCommandResponse)},
  { 93, 109, -1, sizeof(::NetifeMessage::NetifeScriptRegisterRequest)},
  { 119, -1, -1, sizeof(::NetifeMessage::NetifeScriptRegisterResponse)},
  { 127, -1, -1, sizeof(::NetifeMessage::NetifeScriptDebuggerRequest)},
  { 134, -1, -1, sizeof(::NetifeMessage::NetifeScriptDebuggerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::NetifeMessage::_NetifeProbeRequest_default_instance_._instance,
  &::NetifeMessage::_NetifeProbeResponse_default_instance_._instance,
  &::NetifeMessage::_NetifeRegisterRequest_default_instance_._instance,
  &::NetifeMessage::_NetifeRegisterResponse_default_instance_._instance,
  &::NetifeMessage::_NetifeComposerRequest_default_instance_._instance,
  &::NetifeMessage::_NetifeComposerResponse_default_instance_._instance,
  &::NetifeMessage::_NetifePluginCommandRequest_default_instance_._instance,
  &::NetifeMessage::_NetifePluginCommandResponse_default_instance_._instance,
  &::NetifeMessage::_NetifeScriptRegisterRequest_default_instance_._instance,
  &::NetifeMessage::_NetifeScriptRegisterResponse_default_instance_._instance,
  &::NetifeMessage::_NetifeScriptDebuggerRequest_default_instance_._instance,
  &::NetifeMessage::_NetifeScriptDebuggerResponse_default_instance_._instance,
};

const char descriptor_table_protodef_NetifeMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023NetifeMessage.proto\022\rNetifeMessage\"\271\002\n"
  "\022NetifeProbeRequest\022\014\n\004uuid\030\001 \001(\t\022\017\n\007ip_"
  "addr\030\002 \001(\t\022\017\n\007ip_port\030\003 \001(\t\022\033\n\016ws_is_raw"
  "_text\030\004 \001(\010H\000\210\001\001\022\025\n\010uuid_sub\030\005 \001(\005H\001\210\001\001\022"
  "\020\n\010raw_text\030\006 \001(\t\022\020\n\003pid\030\007 \001(\tH\002\210\001\001\"H\n\013R"
  "equestType\022\010\n\004HTTP\020\000\022\t\n\005HTTPS\020\001\022\006\n\002WS\020\002\022"
  "\007\n\003WSS\020\003\022\010\n\004PING\020\004\022\t\n\005OTHER\020\005\")\n\017Applica"
  "tionType\022\n\n\006CLIENT\020\000\022\n\n\006SERVER\020\001B\021\n\017_ws_"
  "is_raw_textB\013\n\t_uuid_subB\006\n\004_pid\":\n\023Neti"
  "feProbeResponse\022\014\n\004uuid\030\001 \001(\t\022\025\n\rrespons"
  "e_text\030\002 \001(\t\"=\n\025NetifeRegisterRequest\022\021\n"
  "\tgrpc_host\030\001 \001(\t\022\021\n\tgrpc_port\030\002 \001(\t\"(\n\026N"
  "etifeRegisterResponse\022\016\n\006status\030\001 \001(\010\"\343\001"
  "\n\025NetifeComposerRequest\022\014\n\004uuid\030\001 \001(\t\022\017\n"
  "\007ip_addr\030\002 \001(\t\022\017\n\007ip_port\030\003 \001(\t\022\033\n\016ws_is"
  "_raw_text\030\004 \001(\010H\000\210\001\001\022\025\n\010uuid_sub\030\005 \001(\005H\001"
  "\210\001\001\022\020\n\010raw_text\030\006 \001(\t\"4\n\014ProtocolType\022\010\n"
  "\004HTTP\020\000\022\t\n\005HTTPS\020\001\022\006\n\002WS\020\002\022\007\n\003WSS\020\003B\021\n\017_"
  "ws_is_raw_textB\013\n\t_uuid_sub\"8\n\026NetifeCom"
  "poserResponse\022\014\n\004uuid\030\001 \001(\t\022\020\n\010raw_back\030"
  "\002 \001(\t\"\227\001\n\032NetifePluginCommandRequest\022\021\n\t"
  "namespace\030\001 \001(\t\022\026\n\016command_prefix\030\002 \001(\t\022"
  "\016\n\006params\030\003 \003(\t\022\021\n\004uuid\030\004 \001(\tH\000\210\001\001\022\025\n\010uu"
  "id_sub\030\005 \001(\005H\001\210\001\001B\007\n\005_uuidB\013\n\t_uuid_sub\""
  "=\n\033NetifePluginCommandResponse\022\016\n\006status"
  "\030\001 \001(\010\022\016\n\006result\030\002 \001(\t\"\337\003\n\033NetifeScriptR"
  "egisterRequest\022\023\n\013script_name\030\001 \001(\t\022\032\n\022s"
  "cript_description\030\002 \001(\t\022\031\n\014trigger_addr\030"
  "\003 \001(\tH\000\210\001\001\022\031\n\014trigger_port\030\004 \001(\tH\001\210\001\001\022!\n"
  "\024trigger_spread_chain\030\005 \001(\tH\002\210\001\001\022\"\n\025trig"
  "ger_spread_plugin\030\006 \001(\tH\003\210\001\001\022(\n\033trigger_"
  "spread_chain_before\030\007 \001(\tH\004\210\001\001\022)\n\034trigge"
  "r_spread_plugin_before\030\010 \001(\tH\005\210\001\001\022\026\n\016scr"
  "ipt_content\030\t \001(\t\022\017\n\007version\030\n \001(\tB\017\n\r_t"
  "rigger_addrB\017\n\r_trigger_portB\027\n\025_trigger"
  "_spread_chainB\030\n\026_trigger_spread_pluginB"
  "\036\n\034_trigger_spread_chain_beforeB\037\n\035_trig"
  "ger_spread_plugin_before\">\n\034NetifeScript"
  "RegisterResponse\022\016\n\006status\030\001 \001(\010\022\016\n\006resu"
  "lt\030\002 \001(\t\"2\n\033NetifeScriptDebuggerRequest\022"
  "\023\n\013script_name\030\001 \001(\t\"@\n\034NetifeScriptDebu"
  "ggerResponse\022\017\n\007ws_addr\030\001 \001(\t\022\017\n\007ws_port"
  "\030\002 \001(\t2\315\004\n\rNetifeService\022U\n\014ProcessProbe"
  "\022!.NetifeMessage.NetifeProbeRequest\032\".Ne"
  "tifeMessage.NetifeProbeResponse\022W\n\010Regis"
  "ter\022$.NetifeMessage.NetifeRegisterReques"
  "t\032%.NetifeMessage.NetifeRegisterResponse"
  "\022W\n\010Composer\022$.NetifeMessage.NetifeCompo"
  "serRequest\032%.NetifeMessage.NetifeCompose"
  "rResponse\022`\n\007Command\022).NetifeMessage.Net"
  "ifePluginCommandRequest\032*.NetifeMessage."
  "NetifePluginCommandResponse\022i\n\016ScriptReg"
  "ister\022*.NetifeMessage.NetifeScriptRegist"
  "erRequest\032+.NetifeMessage.NetifeScriptRe"
  "gisterResponse\022f\n\013ScriptDebug\022*.NetifeMe"
  "ssage.NetifeScriptDebuggerRequest\032+.Neti"
  "feMessage.NetifeScriptDebuggerResponseb\006"
  "proto3"
  ;
static ::_pbi::once_flag descriptor_table_NetifeMessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_NetifeMessage_2eproto = {
    false, false, 2286, descriptor_table_protodef_NetifeMessage_2eproto,
    "NetifeMessage.proto",
    &descriptor_table_NetifeMessage_2eproto_once, nullptr, 0, 12,
    schemas, file_default_instances, TableStruct_NetifeMessage_2eproto::offsets,
    file_level_metadata_NetifeMessage_2eproto, file_level_enum_descriptors_NetifeMessage_2eproto,
    file_level_service_descriptors_NetifeMessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_NetifeMessage_2eproto_getter() {
  return &descriptor_table_NetifeMessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_NetifeMessage_2eproto(&descriptor_table_NetifeMessage_2eproto);
namespace NetifeMessage {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NetifeProbeRequest_RequestType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_NetifeMessage_2eproto);
  return file_level_enum_descriptors_NetifeMessage_2eproto[0];
}
bool NetifeProbeRequest_RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::HTTP;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::HTTPS;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::WS;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::WSS;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::PING;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::OTHER;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::RequestType_MIN;
constexpr NetifeProbeRequest_RequestType NetifeProbeRequest::RequestType_MAX;
constexpr int NetifeProbeRequest::RequestType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NetifeProbeRequest_ApplicationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_NetifeMessage_2eproto);
  return file_level_enum_descriptors_NetifeMessage_2eproto[1];
}
bool NetifeProbeRequest_ApplicationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr NetifeProbeRequest_ApplicationType NetifeProbeRequest::CLIENT;
constexpr NetifeProbeRequest_ApplicationType NetifeProbeRequest::SERVER;
constexpr NetifeProbeRequest_ApplicationType NetifeProbeRequest::ApplicationType_MIN;
constexpr NetifeProbeRequest_ApplicationType NetifeProbeRequest::ApplicationType_MAX;
constexpr int NetifeProbeRequest::ApplicationType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NetifeComposerRequest_ProtocolType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_NetifeMessage_2eproto);
  return file_level_enum_descriptors_NetifeMessage_2eproto[2];
}
bool NetifeComposerRequest_ProtocolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::HTTP;
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::HTTPS;
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::WS;
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::WSS;
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::ProtocolType_MIN;
constexpr NetifeComposerRequest_ProtocolType NetifeComposerRequest::ProtocolType_MAX;
constexpr int NetifeComposerRequest::ProtocolType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class NetifeProbeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NetifeProbeRequest>()._impl_._has_bits_);
  static void set_has_ws_is_raw_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uuid_sub(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NetifeProbeRequest::NetifeProbeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeProbeRequest)
}
NetifeProbeRequest::NetifeProbeRequest(const NetifeProbeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeProbeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.ip_addr_){}
    , decltype(_impl_.ip_port_){}
    , decltype(_impl_.raw_text_){}
    , decltype(_impl_.pid_){}
    , decltype(_impl_.ws_is_raw_text_){}
    , decltype(_impl_.uuid_sub_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ip_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_addr().empty()) {
    _this->_impl_.ip_addr_.Set(from._internal_ip_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ip_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_port().empty()) {
    _this->_impl_.ip_port_.Set(from._internal_ip_port(), 
      _this->GetArenaForAllocation());
  }
  _impl_.raw_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_text().empty()) {
    _this->_impl_.raw_text_.Set(from._internal_raw_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_pid()) {
    _this->_impl_.pid_.Set(from._internal_pid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ws_is_raw_text_, &from._impl_.ws_is_raw_text_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uuid_sub_) -
    reinterpret_cast<char*>(&_impl_.ws_is_raw_text_)) + sizeof(_impl_.uuid_sub_));
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeProbeRequest)
}

inline void NetifeProbeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.ip_addr_){}
    , decltype(_impl_.ip_port_){}
    , decltype(_impl_.raw_text_){}
    , decltype(_impl_.pid_){}
    , decltype(_impl_.ws_is_raw_text_){false}
    , decltype(_impl_.uuid_sub_){0}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.raw_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeProbeRequest::~NetifeProbeRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeProbeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeProbeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.ip_addr_.Destroy();
  _impl_.ip_port_.Destroy();
  _impl_.raw_text_.Destroy();
  _impl_.pid_.Destroy();
}

void NetifeProbeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeProbeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeProbeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.ip_addr_.ClearToEmpty();
  _impl_.ip_port_.ClearToEmpty();
  _impl_.raw_text_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.pid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.ws_is_raw_text_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uuid_sub_) -
        reinterpret_cast<char*>(&_impl_.ws_is_raw_text_)) + sizeof(_impl_.uuid_sub_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeProbeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeRequest.uuid"));
        } else
          goto handle_unusual;
        continue;
      // string ip_addr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ip_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeRequest.ip_addr"));
        } else
          goto handle_unusual;
        continue;
      // string ip_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_ip_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeRequest.ip_port"));
        } else
          goto handle_unusual;
        continue;
      // optional bool ws_is_raw_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_ws_is_raw_text(&has_bits);
          _impl_.ws_is_raw_text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 uuid_sub = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_uuid_sub(&has_bits);
          _impl_.uuid_sub_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string raw_text = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_raw_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeRequest.raw_text"));
        } else
          goto handle_unusual;
        continue;
      // optional string pid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_pid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeRequest.pid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeProbeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeProbeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeRequest.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string ip_addr = 2;
  if (!this->_internal_ip_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_addr().data(), static_cast<int>(this->_internal_ip_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeRequest.ip_addr");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ip_addr(), target);
  }

  // string ip_port = 3;
  if (!this->_internal_ip_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_port().data(), static_cast<int>(this->_internal_ip_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeRequest.ip_port");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ip_port(), target);
  }

  // optional bool ws_is_raw_text = 4;
  if (_internal_has_ws_is_raw_text()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_ws_is_raw_text(), target);
  }

  // optional int32 uuid_sub = 5;
  if (_internal_has_uuid_sub()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_uuid_sub(), target);
  }

  // string raw_text = 6;
  if (!this->_internal_raw_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raw_text().data(), static_cast<int>(this->_internal_raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeRequest.raw_text");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_raw_text(), target);
  }

  // optional string pid = 7;
  if (_internal_has_pid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pid().data(), static_cast<int>(this->_internal_pid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeRequest.pid");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_pid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeProbeRequest)
  return target;
}

size_t NetifeProbeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeProbeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string ip_addr = 2;
  if (!this->_internal_ip_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_addr());
  }

  // string ip_port = 3;
  if (!this->_internal_ip_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_port());
  }

  // string raw_text = 6;
  if (!this->_internal_raw_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raw_text());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string pid = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_pid());
    }

    // optional bool ws_is_raw_text = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional int32 uuid_sub = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uuid_sub());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeProbeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeProbeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeProbeRequest::GetClassData() const { return &_class_data_; }


void NetifeProbeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeProbeRequest*>(&to_msg);
  auto& from = static_cast<const NetifeProbeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeProbeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_ip_addr().empty()) {
    _this->_internal_set_ip_addr(from._internal_ip_addr());
  }
  if (!from._internal_ip_port().empty()) {
    _this->_internal_set_ip_port(from._internal_ip_port());
  }
  if (!from._internal_raw_text().empty()) {
    _this->_internal_set_raw_text(from._internal_raw_text());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_pid(from._internal_pid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ws_is_raw_text_ = from._impl_.ws_is_raw_text_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uuid_sub_ = from._impl_.uuid_sub_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeProbeRequest::CopyFrom(const NetifeProbeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeProbeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeProbeRequest::IsInitialized() const {
  return true;
}

void NetifeProbeRequest::InternalSwap(NetifeProbeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_addr_, lhs_arena,
      &other->_impl_.ip_addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_port_, lhs_arena,
      &other->_impl_.ip_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.raw_text_, lhs_arena,
      &other->_impl_.raw_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pid_, lhs_arena,
      &other->_impl_.pid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetifeProbeRequest, _impl_.uuid_sub_)
      + sizeof(NetifeProbeRequest::_impl_.uuid_sub_)
      - PROTOBUF_FIELD_OFFSET(NetifeProbeRequest, _impl_.ws_is_raw_text_)>(
          reinterpret_cast<char*>(&_impl_.ws_is_raw_text_),
          reinterpret_cast<char*>(&other->_impl_.ws_is_raw_text_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeProbeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[0]);
}

// ===================================================================

class NetifeProbeResponse::_Internal {
 public:
};

NetifeProbeResponse::NetifeProbeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeProbeResponse)
}
NetifeProbeResponse::NetifeProbeResponse(const NetifeProbeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeProbeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uuid_){}
    , decltype(_impl_.response_text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.response_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_text().empty()) {
    _this->_impl_.response_text_.Set(from._internal_response_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeProbeResponse)
}

inline void NetifeProbeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uuid_){}
    , decltype(_impl_.response_text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.response_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeProbeResponse::~NetifeProbeResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeProbeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeProbeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.response_text_.Destroy();
}

void NetifeProbeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeProbeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeProbeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.response_text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeProbeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeResponse.uuid"));
        } else
          goto handle_unusual;
        continue;
      // string response_text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_response_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeProbeResponse.response_text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeProbeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeProbeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeResponse.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string response_text = 2;
  if (!this->_internal_response_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_text().data(), static_cast<int>(this->_internal_response_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeProbeResponse.response_text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_response_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeProbeResponse)
  return target;
}

size_t NetifeProbeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeProbeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string response_text = 2;
  if (!this->_internal_response_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeProbeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeProbeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeProbeResponse::GetClassData() const { return &_class_data_; }


void NetifeProbeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeProbeResponse*>(&to_msg);
  auto& from = static_cast<const NetifeProbeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeProbeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_response_text().empty()) {
    _this->_internal_set_response_text(from._internal_response_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeProbeResponse::CopyFrom(const NetifeProbeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeProbeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeProbeResponse::IsInitialized() const {
  return true;
}

void NetifeProbeResponse::InternalSwap(NetifeProbeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_text_, lhs_arena,
      &other->_impl_.response_text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeProbeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[1]);
}

// ===================================================================

class NetifeRegisterRequest::_Internal {
 public:
};

NetifeRegisterRequest::NetifeRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeRegisterRequest)
}
NetifeRegisterRequest::NetifeRegisterRequest(const NetifeRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeRegisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpc_host_){}
    , decltype(_impl_.grpc_port_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.grpc_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.grpc_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grpc_host().empty()) {
    _this->_impl_.grpc_host_.Set(from._internal_grpc_host(), 
      _this->GetArenaForAllocation());
  }
  _impl_.grpc_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.grpc_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grpc_port().empty()) {
    _this->_impl_.grpc_port_.Set(from._internal_grpc_port(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeRegisterRequest)
}

inline void NetifeRegisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpc_host_){}
    , decltype(_impl_.grpc_port_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.grpc_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.grpc_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.grpc_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.grpc_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeRegisterRequest::~NetifeRegisterRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.grpc_host_.Destroy();
  _impl_.grpc_port_.Destroy();
}

void NetifeRegisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpc_host_.ClearToEmpty();
  _impl_.grpc_port_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string grpc_host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_grpc_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeRegisterRequest.grpc_host"));
        } else
          goto handle_unusual;
        continue;
      // string grpc_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grpc_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeRegisterRequest.grpc_port"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string grpc_host = 1;
  if (!this->_internal_grpc_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grpc_host().data(), static_cast<int>(this->_internal_grpc_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeRegisterRequest.grpc_host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_grpc_host(), target);
  }

  // string grpc_port = 2;
  if (!this->_internal_grpc_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grpc_port().data(), static_cast<int>(this->_internal_grpc_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeRegisterRequest.grpc_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grpc_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeRegisterRequest)
  return target;
}

size_t NetifeRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string grpc_host = 1;
  if (!this->_internal_grpc_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grpc_host());
  }

  // string grpc_port = 2;
  if (!this->_internal_grpc_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grpc_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeRegisterRequest::GetClassData() const { return &_class_data_; }


void NetifeRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeRegisterRequest*>(&to_msg);
  auto& from = static_cast<const NetifeRegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeRegisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_grpc_host().empty()) {
    _this->_internal_set_grpc_host(from._internal_grpc_host());
  }
  if (!from._internal_grpc_port().empty()) {
    _this->_internal_set_grpc_port(from._internal_grpc_port());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeRegisterRequest::CopyFrom(const NetifeRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeRegisterRequest::IsInitialized() const {
  return true;
}

void NetifeRegisterRequest::InternalSwap(NetifeRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.grpc_host_, lhs_arena,
      &other->_impl_.grpc_host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.grpc_port_, lhs_arena,
      &other->_impl_.grpc_port_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[2]);
}

// ===================================================================

class NetifeRegisterResponse::_Internal {
 public:
};

NetifeRegisterResponse::NetifeRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeRegisterResponse)
}
NetifeRegisterResponse::NetifeRegisterResponse(const NetifeRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeRegisterResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeRegisterResponse)
}

inline void NetifeRegisterResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NetifeRegisterResponse::~NetifeRegisterResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeRegisterResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NetifeRegisterResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeRegisterResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeRegisterResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeRegisterResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeRegisterResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeRegisterResponse)
  return target;
}

size_t NetifeRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeRegisterResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeRegisterResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeRegisterResponse::GetClassData() const { return &_class_data_; }


void NetifeRegisterResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeRegisterResponse*>(&to_msg);
  auto& from = static_cast<const NetifeRegisterResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeRegisterResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeRegisterResponse::CopyFrom(const NetifeRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeRegisterResponse::IsInitialized() const {
  return true;
}

void NetifeRegisterResponse::InternalSwap(NetifeRegisterResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[3]);
}

// ===================================================================

class NetifeComposerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NetifeComposerRequest>()._impl_._has_bits_);
  static void set_has_ws_is_raw_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uuid_sub(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

NetifeComposerRequest::NetifeComposerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeComposerRequest)
}
NetifeComposerRequest::NetifeComposerRequest(const NetifeComposerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeComposerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.ip_addr_){}
    , decltype(_impl_.ip_port_){}
    , decltype(_impl_.raw_text_){}
    , decltype(_impl_.ws_is_raw_text_){}
    , decltype(_impl_.uuid_sub_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ip_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_addr().empty()) {
    _this->_impl_.ip_addr_.Set(from._internal_ip_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ip_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip_port().empty()) {
    _this->_impl_.ip_port_.Set(from._internal_ip_port(), 
      _this->GetArenaForAllocation());
  }
  _impl_.raw_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_text().empty()) {
    _this->_impl_.raw_text_.Set(from._internal_raw_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ws_is_raw_text_, &from._impl_.ws_is_raw_text_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uuid_sub_) -
    reinterpret_cast<char*>(&_impl_.ws_is_raw_text_)) + sizeof(_impl_.uuid_sub_));
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeComposerRequest)
}

inline void NetifeComposerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.ip_addr_){}
    , decltype(_impl_.ip_port_){}
    , decltype(_impl_.raw_text_){}
    , decltype(_impl_.ws_is_raw_text_){false}
    , decltype(_impl_.uuid_sub_){0}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.raw_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeComposerRequest::~NetifeComposerRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeComposerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeComposerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.ip_addr_.Destroy();
  _impl_.ip_port_.Destroy();
  _impl_.raw_text_.Destroy();
}

void NetifeComposerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeComposerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeComposerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.ip_addr_.ClearToEmpty();
  _impl_.ip_port_.ClearToEmpty();
  _impl_.raw_text_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.ws_is_raw_text_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uuid_sub_) -
        reinterpret_cast<char*>(&_impl_.ws_is_raw_text_)) + sizeof(_impl_.uuid_sub_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeComposerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerRequest.uuid"));
        } else
          goto handle_unusual;
        continue;
      // string ip_addr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ip_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerRequest.ip_addr"));
        } else
          goto handle_unusual;
        continue;
      // string ip_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_ip_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerRequest.ip_port"));
        } else
          goto handle_unusual;
        continue;
      // optional bool ws_is_raw_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_ws_is_raw_text(&has_bits);
          _impl_.ws_is_raw_text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 uuid_sub = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_uuid_sub(&has_bits);
          _impl_.uuid_sub_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string raw_text = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_raw_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerRequest.raw_text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeComposerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeComposerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerRequest.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string ip_addr = 2;
  if (!this->_internal_ip_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_addr().data(), static_cast<int>(this->_internal_ip_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerRequest.ip_addr");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ip_addr(), target);
  }

  // string ip_port = 3;
  if (!this->_internal_ip_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip_port().data(), static_cast<int>(this->_internal_ip_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerRequest.ip_port");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ip_port(), target);
  }

  // optional bool ws_is_raw_text = 4;
  if (_internal_has_ws_is_raw_text()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_ws_is_raw_text(), target);
  }

  // optional int32 uuid_sub = 5;
  if (_internal_has_uuid_sub()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_uuid_sub(), target);
  }

  // string raw_text = 6;
  if (!this->_internal_raw_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raw_text().data(), static_cast<int>(this->_internal_raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerRequest.raw_text");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_raw_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeComposerRequest)
  return target;
}

size_t NetifeComposerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeComposerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string ip_addr = 2;
  if (!this->_internal_ip_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_addr());
  }

  // string ip_port = 3;
  if (!this->_internal_ip_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip_port());
  }

  // string raw_text = 6;
  if (!this->_internal_raw_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raw_text());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool ws_is_raw_text = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 uuid_sub = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uuid_sub());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeComposerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeComposerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeComposerRequest::GetClassData() const { return &_class_data_; }


void NetifeComposerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeComposerRequest*>(&to_msg);
  auto& from = static_cast<const NetifeComposerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeComposerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_ip_addr().empty()) {
    _this->_internal_set_ip_addr(from._internal_ip_addr());
  }
  if (!from._internal_ip_port().empty()) {
    _this->_internal_set_ip_port(from._internal_ip_port());
  }
  if (!from._internal_raw_text().empty()) {
    _this->_internal_set_raw_text(from._internal_raw_text());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.ws_is_raw_text_ = from._impl_.ws_is_raw_text_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uuid_sub_ = from._impl_.uuid_sub_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeComposerRequest::CopyFrom(const NetifeComposerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeComposerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeComposerRequest::IsInitialized() const {
  return true;
}

void NetifeComposerRequest::InternalSwap(NetifeComposerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_addr_, lhs_arena,
      &other->_impl_.ip_addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_port_, lhs_arena,
      &other->_impl_.ip_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.raw_text_, lhs_arena,
      &other->_impl_.raw_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetifeComposerRequest, _impl_.uuid_sub_)
      + sizeof(NetifeComposerRequest::_impl_.uuid_sub_)
      - PROTOBUF_FIELD_OFFSET(NetifeComposerRequest, _impl_.ws_is_raw_text_)>(
          reinterpret_cast<char*>(&_impl_.ws_is_raw_text_),
          reinterpret_cast<char*>(&other->_impl_.ws_is_raw_text_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeComposerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[4]);
}

// ===================================================================

class NetifeComposerResponse::_Internal {
 public:
};

NetifeComposerResponse::NetifeComposerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeComposerResponse)
}
NetifeComposerResponse::NetifeComposerResponse(const NetifeComposerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeComposerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uuid_){}
    , decltype(_impl_.raw_back_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.raw_back_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_back_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_back().empty()) {
    _this->_impl_.raw_back_.Set(from._internal_raw_back(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeComposerResponse)
}

inline void NetifeComposerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uuid_){}
    , decltype(_impl_.raw_back_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.raw_back_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_back_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeComposerResponse::~NetifeComposerResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeComposerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeComposerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.raw_back_.Destroy();
}

void NetifeComposerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeComposerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeComposerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  _impl_.raw_back_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeComposerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerResponse.uuid"));
        } else
          goto handle_unusual;
        continue;
      // string raw_back = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_raw_back();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeComposerResponse.raw_back"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeComposerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeComposerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerResponse.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string raw_back = 2;
  if (!this->_internal_raw_back().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raw_back().data(), static_cast<int>(this->_internal_raw_back().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeComposerResponse.raw_back");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_raw_back(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeComposerResponse)
  return target;
}

size_t NetifeComposerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeComposerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string raw_back = 2;
  if (!this->_internal_raw_back().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raw_back());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeComposerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeComposerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeComposerResponse::GetClassData() const { return &_class_data_; }


void NetifeComposerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeComposerResponse*>(&to_msg);
  auto& from = static_cast<const NetifeComposerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeComposerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_raw_back().empty()) {
    _this->_internal_set_raw_back(from._internal_raw_back());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeComposerResponse::CopyFrom(const NetifeComposerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeComposerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeComposerResponse::IsInitialized() const {
  return true;
}

void NetifeComposerResponse::InternalSwap(NetifeComposerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.raw_back_, lhs_arena,
      &other->_impl_.raw_back_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeComposerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[5]);
}

// ===================================================================

class NetifePluginCommandRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NetifePluginCommandRequest>()._impl_._has_bits_);
  static void set_has_uuid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uuid_sub(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

NetifePluginCommandRequest::NetifePluginCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifePluginCommandRequest)
}
NetifePluginCommandRequest::NetifePluginCommandRequest(const NetifePluginCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifePluginCommandRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){from._impl_.params_}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.command_prefix_){}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.uuid_sub_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_namespace_().empty()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.command_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command_prefix().empty()) {
    _this->_impl_.command_prefix_.Set(from._internal_command_prefix(), 
      _this->GetArenaForAllocation());
  }
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_uuid()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.uuid_sub_ = from._impl_.uuid_sub_;
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifePluginCommandRequest)
}

inline void NetifePluginCommandRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){arena}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.command_prefix_){}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.uuid_sub_){0}
  };
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.command_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifePluginCommandRequest::~NetifePluginCommandRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifePluginCommandRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifePluginCommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.params_.~RepeatedPtrField();
  _impl_.namespace__.Destroy();
  _impl_.command_prefix_.Destroy();
  _impl_.uuid_.Destroy();
}

void NetifePluginCommandRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifePluginCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifePluginCommandRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.params_.Clear();
  _impl_.namespace__.ClearToEmpty();
  _impl_.command_prefix_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.uuid_.ClearNonDefaultToEmpty();
  }
  _impl_.uuid_sub_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifePluginCommandRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string namespace = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifePluginCommandRequest.namespace"));
        } else
          goto handle_unusual;
        continue;
      // string command_prefix = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_command_prefix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifePluginCommandRequest.command_prefix"));
        } else
          goto handle_unusual;
        continue;
      // repeated string params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_params();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifePluginCommandRequest.params"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string uuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifePluginCommandRequest.uuid"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 uuid_sub = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_uuid_sub(&has_bits);
          _impl_.uuid_sub_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifePluginCommandRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifePluginCommandRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespace = 1;
  if (!this->_internal_namespace_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifePluginCommandRequest.namespace");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_namespace_(), target);
  }

  // string command_prefix = 2;
  if (!this->_internal_command_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command_prefix().data(), static_cast<int>(this->_internal_command_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifePluginCommandRequest.command_prefix");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_command_prefix(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->_internal_params_size(); i < n; i++) {
    const auto& s = this->_internal_params(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifePluginCommandRequest.params");
    target = stream->WriteString(3, s, target);
  }

  // optional string uuid = 4;
  if (_internal_has_uuid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifePluginCommandRequest.uuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_uuid(), target);
  }

  // optional int32 uuid_sub = 5;
  if (_internal_has_uuid_sub()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_uuid_sub(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifePluginCommandRequest)
  return target;
}

size_t NetifePluginCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifePluginCommandRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string params = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.params_.size());
  for (int i = 0, n = _impl_.params_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.params_.Get(i));
  }

  // string namespace = 1;
  if (!this->_internal_namespace_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_namespace_());
  }

  // string command_prefix = 2;
  if (!this->_internal_command_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command_prefix());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string uuid = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_uuid());
    }

    // optional int32 uuid_sub = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uuid_sub());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifePluginCommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifePluginCommandRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifePluginCommandRequest::GetClassData() const { return &_class_data_; }


void NetifePluginCommandRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifePluginCommandRequest*>(&to_msg);
  auto& from = static_cast<const NetifePluginCommandRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifePluginCommandRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.params_.MergeFrom(from._impl_.params_);
  if (!from._internal_namespace_().empty()) {
    _this->_internal_set_namespace_(from._internal_namespace_());
  }
  if (!from._internal_command_prefix().empty()) {
    _this->_internal_set_command_prefix(from._internal_command_prefix());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uuid(from._internal_uuid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uuid_sub_ = from._impl_.uuid_sub_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifePluginCommandRequest::CopyFrom(const NetifePluginCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifePluginCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifePluginCommandRequest::IsInitialized() const {
  return true;
}

void NetifePluginCommandRequest::InternalSwap(NetifePluginCommandRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.params_.InternalSwap(&other->_impl_.params_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_prefix_, lhs_arena,
      &other->_impl_.command_prefix_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  swap(_impl_.uuid_sub_, other->_impl_.uuid_sub_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifePluginCommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[6]);
}

// ===================================================================

class NetifePluginCommandResponse::_Internal {
 public:
};

NetifePluginCommandResponse::NetifePluginCommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifePluginCommandResponse)
}
NetifePluginCommandResponse::NetifePluginCommandResponse(const NetifePluginCommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifePluginCommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifePluginCommandResponse)
}

inline void NetifePluginCommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifePluginCommandResponse::~NetifePluginCommandResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifePluginCommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifePluginCommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void NetifePluginCommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifePluginCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifePluginCommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifePluginCommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifePluginCommandResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifePluginCommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifePluginCommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string result = 2;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifePluginCommandResponse.result");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifePluginCommandResponse)
  return target;
}

size_t NetifePluginCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifePluginCommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 2;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifePluginCommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifePluginCommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifePluginCommandResponse::GetClassData() const { return &_class_data_; }


void NetifePluginCommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifePluginCommandResponse*>(&to_msg);
  auto& from = static_cast<const NetifePluginCommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifePluginCommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifePluginCommandResponse::CopyFrom(const NetifePluginCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifePluginCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifePluginCommandResponse::IsInitialized() const {
  return true;
}

void NetifePluginCommandResponse::InternalSwap(NetifePluginCommandResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifePluginCommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[7]);
}

// ===================================================================

class NetifeScriptRegisterRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NetifeScriptRegisterRequest>()._impl_._has_bits_);
  static void set_has_trigger_addr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_trigger_port(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_trigger_spread_chain(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_trigger_spread_plugin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_trigger_spread_chain_before(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_trigger_spread_plugin_before(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

NetifeScriptRegisterRequest::NetifeScriptRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeScriptRegisterRequest)
}
NetifeScriptRegisterRequest::NetifeScriptRegisterRequest(const NetifeScriptRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeScriptRegisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.script_name_){}
    , decltype(_impl_.script_description_){}
    , decltype(_impl_.trigger_addr_){}
    , decltype(_impl_.trigger_port_){}
    , decltype(_impl_.trigger_spread_chain_){}
    , decltype(_impl_.trigger_spread_plugin_){}
    , decltype(_impl_.trigger_spread_chain_before_){}
    , decltype(_impl_.trigger_spread_plugin_before_){}
    , decltype(_impl_.script_content_){}
    , decltype(_impl_.version_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script_name().empty()) {
    _this->_impl_.script_name_.Set(from._internal_script_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.script_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script_description().empty()) {
    _this->_impl_.script_description_.Set(from._internal_script_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_addr()) {
    _this->_impl_.trigger_addr_.Set(from._internal_trigger_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_port()) {
    _this->_impl_.trigger_port_.Set(from._internal_trigger_port(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_spread_chain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_chain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_spread_chain()) {
    _this->_impl_.trigger_spread_chain_.Set(from._internal_trigger_spread_chain(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_spread_plugin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_plugin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_spread_plugin()) {
    _this->_impl_.trigger_spread_plugin_.Set(from._internal_trigger_spread_plugin(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_spread_chain_before_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_chain_before_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_spread_chain_before()) {
    _this->_impl_.trigger_spread_chain_before_.Set(from._internal_trigger_spread_chain_before(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_spread_plugin_before_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_plugin_before_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_trigger_spread_plugin_before()) {
    _this->_impl_.trigger_spread_plugin_before_.Set(from._internal_trigger_spread_plugin_before(), 
      _this->GetArenaForAllocation());
  }
  _impl_.script_content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script_content().empty()) {
    _this->_impl_.script_content_.Set(from._internal_script_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeScriptRegisterRequest)
}

inline void NetifeScriptRegisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.script_name_){}
    , decltype(_impl_.script_description_){}
    , decltype(_impl_.trigger_addr_){}
    , decltype(_impl_.trigger_port_){}
    , decltype(_impl_.trigger_spread_chain_){}
    , decltype(_impl_.trigger_spread_plugin_){}
    , decltype(_impl_.trigger_spread_chain_before_){}
    , decltype(_impl_.trigger_spread_plugin_before_){}
    , decltype(_impl_.script_content_){}
    , decltype(_impl_.version_){}
  };
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.script_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_spread_chain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_chain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_spread_plugin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_plugin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_spread_chain_before_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_chain_before_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_spread_plugin_before_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_spread_plugin_before_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.script_content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeScriptRegisterRequest::~NetifeScriptRegisterRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeScriptRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeScriptRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.script_name_.Destroy();
  _impl_.script_description_.Destroy();
  _impl_.trigger_addr_.Destroy();
  _impl_.trigger_port_.Destroy();
  _impl_.trigger_spread_chain_.Destroy();
  _impl_.trigger_spread_plugin_.Destroy();
  _impl_.trigger_spread_chain_before_.Destroy();
  _impl_.trigger_spread_plugin_before_.Destroy();
  _impl_.script_content_.Destroy();
  _impl_.version_.Destroy();
}

void NetifeScriptRegisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeScriptRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeScriptRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.script_name_.ClearToEmpty();
  _impl_.script_description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.trigger_addr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.trigger_port_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.trigger_spread_chain_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.trigger_spread_plugin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.trigger_spread_chain_before_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.trigger_spread_plugin_before_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.script_content_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeScriptRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string script_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_script_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.script_name"));
        } else
          goto handle_unusual;
        continue;
      // string script_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_script_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.script_description"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_addr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_trigger_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_addr"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_port = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_trigger_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_port"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_spread_chain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_trigger_spread_chain();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_chain"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_spread_plugin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_trigger_spread_plugin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_plugin"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_spread_chain_before = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_trigger_spread_chain_before();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_chain_before"));
        } else
          goto handle_unusual;
        continue;
      // optional string trigger_spread_plugin_before = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_trigger_spread_plugin_before();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_plugin_before"));
        } else
          goto handle_unusual;
        continue;
      // string script_content = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_script_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.script_content"));
        } else
          goto handle_unusual;
        continue;
      // string version = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeScriptRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeScriptRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_name = 1;
  if (!this->_internal_script_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_script_name().data(), static_cast<int>(this->_internal_script_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.script_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_script_name(), target);
  }

  // string script_description = 2;
  if (!this->_internal_script_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_script_description().data(), static_cast<int>(this->_internal_script_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.script_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_script_description(), target);
  }

  // optional string trigger_addr = 3;
  if (_internal_has_trigger_addr()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_addr().data(), static_cast<int>(this->_internal_trigger_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_addr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_trigger_addr(), target);
  }

  // optional string trigger_port = 4;
  if (_internal_has_trigger_port()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_port().data(), static_cast<int>(this->_internal_trigger_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_port");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_trigger_port(), target);
  }

  // optional string trigger_spread_chain = 5;
  if (_internal_has_trigger_spread_chain()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_spread_chain().data(), static_cast<int>(this->_internal_trigger_spread_chain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_chain");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_trigger_spread_chain(), target);
  }

  // optional string trigger_spread_plugin = 6;
  if (_internal_has_trigger_spread_plugin()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_spread_plugin().data(), static_cast<int>(this->_internal_trigger_spread_plugin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_plugin");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_trigger_spread_plugin(), target);
  }

  // optional string trigger_spread_chain_before = 7;
  if (_internal_has_trigger_spread_chain_before()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_spread_chain_before().data(), static_cast<int>(this->_internal_trigger_spread_chain_before().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_chain_before");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_trigger_spread_chain_before(), target);
  }

  // optional string trigger_spread_plugin_before = 8;
  if (_internal_has_trigger_spread_plugin_before()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_spread_plugin_before().data(), static_cast<int>(this->_internal_trigger_spread_plugin_before().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.trigger_spread_plugin_before");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_trigger_spread_plugin_before(), target);
  }

  // string script_content = 9;
  if (!this->_internal_script_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_script_content().data(), static_cast<int>(this->_internal_script_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.script_content");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_script_content(), target);
  }

  // string version = 10;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterRequest.version");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeScriptRegisterRequest)
  return target;
}

size_t NetifeScriptRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeScriptRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string script_name = 1;
  if (!this->_internal_script_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_script_name());
  }

  // string script_description = 2;
  if (!this->_internal_script_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_script_description());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string trigger_addr = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_addr());
    }

    // optional string trigger_port = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_port());
    }

    // optional string trigger_spread_chain = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_spread_chain());
    }

    // optional string trigger_spread_plugin = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_spread_plugin());
    }

    // optional string trigger_spread_chain_before = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_spread_chain_before());
    }

    // optional string trigger_spread_plugin_before = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_trigger_spread_plugin_before());
    }

  }
  // string script_content = 9;
  if (!this->_internal_script_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_script_content());
  }

  // string version = 10;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeScriptRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeScriptRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeScriptRegisterRequest::GetClassData() const { return &_class_data_; }


void NetifeScriptRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeScriptRegisterRequest*>(&to_msg);
  auto& from = static_cast<const NetifeScriptRegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeScriptRegisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_script_name().empty()) {
    _this->_internal_set_script_name(from._internal_script_name());
  }
  if (!from._internal_script_description().empty()) {
    _this->_internal_set_script_description(from._internal_script_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_trigger_addr(from._internal_trigger_addr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_trigger_port(from._internal_trigger_port());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_trigger_spread_chain(from._internal_trigger_spread_chain());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_trigger_spread_plugin(from._internal_trigger_spread_plugin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_trigger_spread_chain_before(from._internal_trigger_spread_chain_before());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_trigger_spread_plugin_before(from._internal_trigger_spread_plugin_before());
    }
  }
  if (!from._internal_script_content().empty()) {
    _this->_internal_set_script_content(from._internal_script_content());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeScriptRegisterRequest::CopyFrom(const NetifeScriptRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeScriptRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeScriptRegisterRequest::IsInitialized() const {
  return true;
}

void NetifeScriptRegisterRequest::InternalSwap(NetifeScriptRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_name_, lhs_arena,
      &other->_impl_.script_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_description_, lhs_arena,
      &other->_impl_.script_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_addr_, lhs_arena,
      &other->_impl_.trigger_addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_port_, lhs_arena,
      &other->_impl_.trigger_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_spread_chain_, lhs_arena,
      &other->_impl_.trigger_spread_chain_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_spread_plugin_, lhs_arena,
      &other->_impl_.trigger_spread_plugin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_spread_chain_before_, lhs_arena,
      &other->_impl_.trigger_spread_chain_before_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_spread_plugin_before_, lhs_arena,
      &other->_impl_.trigger_spread_plugin_before_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_content_, lhs_arena,
      &other->_impl_.script_content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeScriptRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[8]);
}

// ===================================================================

class NetifeScriptRegisterResponse::_Internal {
 public:
};

NetifeScriptRegisterResponse::NetifeScriptRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeScriptRegisterResponse)
}
NetifeScriptRegisterResponse::NetifeScriptRegisterResponse(const NetifeScriptRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeScriptRegisterResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeScriptRegisterResponse)
}

inline void NetifeScriptRegisterResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeScriptRegisterResponse::~NetifeScriptRegisterResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeScriptRegisterResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeScriptRegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void NetifeScriptRegisterResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeScriptRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeScriptRegisterResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeScriptRegisterResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptRegisterResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeScriptRegisterResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeScriptRegisterResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string result = 2;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptRegisterResponse.result");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeScriptRegisterResponse)
  return target;
}

size_t NetifeScriptRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeScriptRegisterResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 2;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeScriptRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeScriptRegisterResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeScriptRegisterResponse::GetClassData() const { return &_class_data_; }


void NetifeScriptRegisterResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeScriptRegisterResponse*>(&to_msg);
  auto& from = static_cast<const NetifeScriptRegisterResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeScriptRegisterResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeScriptRegisterResponse::CopyFrom(const NetifeScriptRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeScriptRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeScriptRegisterResponse::IsInitialized() const {
  return true;
}

void NetifeScriptRegisterResponse::InternalSwap(NetifeScriptRegisterResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeScriptRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[9]);
}

// ===================================================================

class NetifeScriptDebuggerRequest::_Internal {
 public:
};

NetifeScriptDebuggerRequest::NetifeScriptDebuggerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeScriptDebuggerRequest)
}
NetifeScriptDebuggerRequest::NetifeScriptDebuggerRequest(const NetifeScriptDebuggerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeScriptDebuggerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.script_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script_name().empty()) {
    _this->_impl_.script_name_.Set(from._internal_script_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeScriptDebuggerRequest)
}

inline void NetifeScriptDebuggerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.script_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeScriptDebuggerRequest::~NetifeScriptDebuggerRequest() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeScriptDebuggerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeScriptDebuggerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.script_name_.Destroy();
}

void NetifeScriptDebuggerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeScriptDebuggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeScriptDebuggerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.script_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeScriptDebuggerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string script_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_script_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptDebuggerRequest.script_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeScriptDebuggerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeScriptDebuggerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string script_name = 1;
  if (!this->_internal_script_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_script_name().data(), static_cast<int>(this->_internal_script_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptDebuggerRequest.script_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_script_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeScriptDebuggerRequest)
  return target;
}

size_t NetifeScriptDebuggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeScriptDebuggerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string script_name = 1;
  if (!this->_internal_script_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_script_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeScriptDebuggerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeScriptDebuggerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeScriptDebuggerRequest::GetClassData() const { return &_class_data_; }


void NetifeScriptDebuggerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeScriptDebuggerRequest*>(&to_msg);
  auto& from = static_cast<const NetifeScriptDebuggerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeScriptDebuggerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_script_name().empty()) {
    _this->_internal_set_script_name(from._internal_script_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeScriptDebuggerRequest::CopyFrom(const NetifeScriptDebuggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeScriptDebuggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeScriptDebuggerRequest::IsInitialized() const {
  return true;
}

void NetifeScriptDebuggerRequest::InternalSwap(NetifeScriptDebuggerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_name_, lhs_arena,
      &other->_impl_.script_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeScriptDebuggerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[10]);
}

// ===================================================================

class NetifeScriptDebuggerResponse::_Internal {
 public:
};

NetifeScriptDebuggerResponse::NetifeScriptDebuggerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:NetifeMessage.NetifeScriptDebuggerResponse)
}
NetifeScriptDebuggerResponse::NetifeScriptDebuggerResponse(const NetifeScriptDebuggerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NetifeScriptDebuggerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ws_addr_){}
    , decltype(_impl_.ws_port_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ws_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ws_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ws_addr().empty()) {
    _this->_impl_.ws_addr_.Set(from._internal_ws_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ws_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ws_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ws_port().empty()) {
    _this->_impl_.ws_port_.Set(from._internal_ws_port(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:NetifeMessage.NetifeScriptDebuggerResponse)
}

inline void NetifeScriptDebuggerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ws_addr_){}
    , decltype(_impl_.ws_port_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ws_addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ws_addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ws_port_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ws_port_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NetifeScriptDebuggerResponse::~NetifeScriptDebuggerResponse() {
  // @@protoc_insertion_point(destructor:NetifeMessage.NetifeScriptDebuggerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetifeScriptDebuggerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ws_addr_.Destroy();
  _impl_.ws_port_.Destroy();
}

void NetifeScriptDebuggerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetifeScriptDebuggerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetifeMessage.NetifeScriptDebuggerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ws_addr_.ClearToEmpty();
  _impl_.ws_port_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetifeScriptDebuggerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ws_addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ws_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptDebuggerResponse.ws_addr"));
        } else
          goto handle_unusual;
        continue;
      // string ws_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ws_port();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "NetifeMessage.NetifeScriptDebuggerResponse.ws_port"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetifeScriptDebuggerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetifeMessage.NetifeScriptDebuggerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ws_addr = 1;
  if (!this->_internal_ws_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ws_addr().data(), static_cast<int>(this->_internal_ws_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptDebuggerResponse.ws_addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ws_addr(), target);
  }

  // string ws_port = 2;
  if (!this->_internal_ws_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ws_port().data(), static_cast<int>(this->_internal_ws_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NetifeMessage.NetifeScriptDebuggerResponse.ws_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ws_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetifeMessage.NetifeScriptDebuggerResponse)
  return target;
}

size_t NetifeScriptDebuggerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetifeMessage.NetifeScriptDebuggerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ws_addr = 1;
  if (!this->_internal_ws_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ws_addr());
  }

  // string ws_port = 2;
  if (!this->_internal_ws_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ws_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetifeScriptDebuggerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NetifeScriptDebuggerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetifeScriptDebuggerResponse::GetClassData() const { return &_class_data_; }


void NetifeScriptDebuggerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NetifeScriptDebuggerResponse*>(&to_msg);
  auto& from = static_cast<const NetifeScriptDebuggerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetifeMessage.NetifeScriptDebuggerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ws_addr().empty()) {
    _this->_internal_set_ws_addr(from._internal_ws_addr());
  }
  if (!from._internal_ws_port().empty()) {
    _this->_internal_set_ws_port(from._internal_ws_port());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetifeScriptDebuggerResponse::CopyFrom(const NetifeScriptDebuggerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetifeMessage.NetifeScriptDebuggerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetifeScriptDebuggerResponse::IsInitialized() const {
  return true;
}

void NetifeScriptDebuggerResponse::InternalSwap(NetifeScriptDebuggerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ws_addr_, lhs_arena,
      &other->_impl_.ws_addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ws_port_, lhs_arena,
      &other->_impl_.ws_port_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetifeScriptDebuggerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetifeMessage_2eproto_getter, &descriptor_table_NetifeMessage_2eproto_once,
      file_level_metadata_NetifeMessage_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace NetifeMessage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeProbeRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeProbeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeProbeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeProbeResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeProbeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeProbeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeRegisterRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeRegisterResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeComposerRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeComposerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeComposerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeComposerResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeComposerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeComposerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifePluginCommandRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifePluginCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifePluginCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifePluginCommandResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifePluginCommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifePluginCommandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeScriptRegisterRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeScriptRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeScriptRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeScriptRegisterResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeScriptRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeScriptRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeScriptDebuggerRequest*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeScriptDebuggerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeScriptDebuggerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::NetifeMessage::NetifeScriptDebuggerResponse*
Arena::CreateMaybeMessage< ::NetifeMessage::NetifeScriptDebuggerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NetifeMessage::NetifeScriptDebuggerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
