syntax = "proto3";

package NetifeMessage;

service NetifeProbeService {
    rpc Process (NetifeProbeRequest) returns (NetifeProbeResponse);
}

// 定义 Netife Probe 的请求信息的数据结构
message NetifeProbeRequest {

    string uuid = 1; // 全局唯一 UUID，如果是 HTTP / HTTPS 要求响应和回复需要对应唯一；如果是 WS / WSS 那么要求一个通信道中 UUID 均相同

    //表示捕获到的协议类型
    enum RequestType{
        HTTP = 0; // HTTP协议
        HTTPS = 1; // HTTPS协议
        WS = 2; // WS协议
        WSS = 3; // WSS协议
        PING = 4; // PING
        OTHER = 5; //[本字段保留以便于扩展] 其他
    }

    //数据标注
    enum ApplicationType {
        CLIENT = 0; // 表示本消息为客户端请求
        SERVER = 1; // 表示本消息为服务器响应
    }

    string ip_addr = 2; // 数据包的原始云端 IP 地址
    string ip_port = 3; // 数据包的原始云端 PORT 地址

    optional bool ws_is_raw_text = 4; // [WS/WSS下存在本字段] 如果WS为 Binary Stream 本布尔为 True

    // 如果是 HTTP / HTTPS 那么就是 Raw Text，如果是 WS / WSS 那么就是 字符数据 或 Binary Steam 的 Hex String 表示
    string raw_text = 5;

    optional string pid = 6; // [本字段可选] 如果可以抓到进程信息，那么本为其对应的 PID

}

// 定义返回给 Netife Probe 信息的数据结构
message NetifeProbeResponse{
    string uuid = 1; // UUID 回显，本 UUID 与gRpc请求的 UUID相同

    string response_text = 2; // 返回修改后的 ResponseText。
                              // HTTP / HTTPS 对应的是 Raw Request，WS / WSS 对应的是 String 或 Binary Stream 的 Hex String 表示
}